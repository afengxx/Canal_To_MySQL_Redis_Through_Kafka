version: '3.7'

services:
#   tunnel-1194:
#      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
#      container_name: galaxy-tunnel-1194
#      privileged: true
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      environment:
#         RUN_AFTER_SIDECAR: 'no'
#         OVPN_PORT: 1194
#         OVPN_PROTO: tcp
#         OVPN_IP_POOL: 10.0.0.0
#         OVPN_TLS_AUTH: ta.key
#         OVPN_CA: ca.crt
#         OVPN_CERT: server1.crt
#         OVPN_KEY: server1.key
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}
#
#   tunnel-1195:
#      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
#      container_name: galaxy-tunnel-1195
#      privileged: true
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      environment:
#         RUN_AFTER_SIDECAR: 'no'
#         OVPN_PORT: 1195
#         OVPN_PROTO: udp
#         OVPN_IP_POOL: 10.13.13.0
#         OVPN_TLS_AUTH: longterm/ta.key
#         OVPN_CA: longterm/ca.crt
#         OVPN_CERT: longterm/server2.crt
#         OVPN_KEY: longterm/server2.key
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}
#
#   tunnel-1196:
#      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
#      container_name: galaxy-tunnel-1196
#      privileged: true
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      environment:
#         RUN_AFTER_SIDECAR: 'no'
#         OVPN_PORT: 1196
#         OVPN_PROTO: udp
#         OVPN_IP_POOL: 10.14.14.0
#         OVPN_TLS_AUTH: longterm/ta.key
#         OVPN_CA: longterm/ca.crt
#         OVPN_CERT: longterm/server3.crt
#         OVPN_KEY: longterm/server3.key
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}
#
#   nginx:
#      image: c6supper/galaxy-nginx:${NGINX_TAG}
#      container_name: galaxy-nginx
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      environment:
#         GALAXY_TUNNEL_HOST: ${APP_HOST}
#         GALAXY_CLIENT_HOST: ${APP_HOST}
#      depends_on:
#         - client
#         - tunnel-1194
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}
#
#   client:
#      image: c6supper/galaxy-client:${CLIENT_TAG}
#      container_name: galaxy-client
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      depends_on:
#         - postgres
#      environment:
#         GALAXY_GUACD_HOST: ${APP_HOST}
#         GALAXY_POSTGRES_HOST: ${APP_HOST}
#         GALAXY_POSTGRES_DB: ${CLIENT_DB}
#         GALAXY_POSTGRES_USER: ${APP_POSTGRES_USER}
#         GALAXY_POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}
#
#   guacd:
#      image: c6supper/galaxy-guacd:${GUACD_TAG}
#      container_name: galaxy-guacd
#      network_mode: ${APP_NETWORK_MODE}
#      restart: ${APP_RESTART_POLICY}
#      logging:
#         driver: ${APP_LOGGING_DRIVER}
#         options:
#            max-size: ${APP_LOGGING_SIZE}
#            max-file: ${APP_LOGGING_NUMBER}

   postgres:
      image: postgres:${POSTGRES_TAG}
      container_name: galaxy-postgres
      network_mode: ${APP_NETWORK_MODE}
      restart: ${APP_RESTART_POLICY}
      environment:
         POSTGRES_USER: ${APP_POSTGRES_USER}
         POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
         POSTGRES_DB: ${APP_POSTGRES_DB}
      volumes:
         - type: bind
           source: ${POSTGRES_DATA_VOLUME}
           target: /var/lib/postgresql/data
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}

   keycloak:
      image: c6supper/keycloak:${KEYCLOAK_TAG}
      container_name: galaxy-keycloak
      network_mode: ${APP_NETWORK_MODE}
      restart: ${APP_RESTART_POLICY}
      environment:
         DB_VENDOR: postgres
         DB_PORT: ${POSTGRES_PORT}
         KEYCLOAK_USER: ${KEYCLOAK_USER}
         KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
         DB_ADDR: ${APP_HOST}
         DB_DATABASE: ${KEYCLOAK_DB}
         DB_USER: ${APP_POSTGRES_USER}
         DB_PASSWORD: ${APP_POSTGRES_PASSWORD}
#         KEYCLOAK_LOGLEVEL: DEBUG
         JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
         JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
      depends_on:
         - postgres
      volumes:
         - type: bind
           source: ${KEYCLOAK_GALAXY_VOLUME}
           target: /galaxy
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}
