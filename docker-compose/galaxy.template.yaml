version: '3.8'

networks:
   tunnel-119x:
      ipam:
         driver: default
         config:
            - subnet: 10.0.1.0/24
#   tunnel-1195:
#     ipam:
#        driver: default
#        config:
#           - subnet: 10.13.14.0/24
#   tunnel-1196:
#      ipam:
#         driver: default
#         config:
#            - subnet: 10.14.15.0/24

   postgres:
      driver: bridge
   client:
      driver: bridge
   keycloak:
      driver: bridge

services:
   tunnel-1194:
      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
      container_name: galaxy-tunnel-1194
      cap_add:
         - NET_ADMIN
      devices:
         - "/dev/net/tun"
      networks:
         - tunnel-119x
         - client
         - keycloak
         - postgres
      #volumes:
      #   - ${TUNNEL_1194_GALAXY_VOLUME}:${TUNNEL_LOG_DIR}
      restart: ${APP_RESTART_POLICY}
      environment:
         RUN_AFTER_SIDECAR: 'no'
         OVPN_PORT: 1194
         OVPN_PROTO: tcp
         OVPN_IP_POOL: 10.0.0.0
         OVPN_TLS_AUTH: ta.key
         OVPN_CA: ca.crt
         OVPN_CERT: server1.crt
         OVPN_KEY: server1.key
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}
      ports:
         - "1194:1194"
         - "80:80"
         - "443:443"
         - "1195:1195"
         - "1196:1196"

   tunnel-1195:
      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
      container_name: galaxy-tunnel-1195
      cap_add:
         - NET_ADMIN
      devices:
         - "/dev/net/tun"
      network_mode: service:tunnel-1194
      #volumes:
      #   - ${TUNNEL_1195_GALAXY_VOLUME}:${TUNNEL_LOG_DIR}
      restart: ${APP_RESTART_POLICY}
      environment:
         RUN_AFTER_SIDECAR: 'no'
         OVPN_PORT: 1195
         OVPN_PROTO: tcp
         OVPN_IP_POOL: 10.13.13.0
         OVPN_TLS_AUTH: longterm/ta.key
         OVPN_CA: longterm/ca.crt
         OVPN_CERT: longterm/server2.crt
         OVPN_KEY: longterm/server2.key
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}

   tunnel-1196:
      image: c6supper/galaxy-tunnel:${TUNNEL_TAG}
      container_name: galaxy-tunnel-1196
      cap_add:
         - NET_ADMIN
      devices:
         - "/dev/net/tun"
      network_mode: service:tunnel-1194
      #volumes:
      #   - ${TUNNEL_1196_GALAXY_VOLUME}:${TUNNEL_LOG_DIR}
      restart: ${APP_RESTART_POLICY}
      environment:
         RUN_AFTER_SIDECAR: 'no'
         OVPN_PORT: 1196
         OVPN_PROTO: tcp
         OVPN_IP_POOL: 10.14.14.0
         OVPN_TLS_AUTH: longterm/ta.key
         OVPN_CA: longterm/ca.crt
         OVPN_CERT: longterm/server3.crt
         OVPN_KEY: longterm/server3.key
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}

   #nginx:
      #image: c6supper/galaxy-nginx:${NGINX_TAG}
      #container_name: galaxy-nginx
      ## network_mode: ${APP_NETWORK_MODE}
      #restart: ${APP_RESTART_POLICY}
      #environment:
         #GALAXY_TUNNEL_HOST: galaxy-tunnel-1194
         #GALAXY_CLIENT_HOST: galaxy-client
      #depends_on:
         #- client
         #- tunnel-1194
         #- keycloak
      #network_mode: service:tunnel-1194
      ##volumes:
      ##   - ${NGINX_GALAXY_VOLUME}:${NGINX_LOG_DIR}
      #logging:
         #driver: ${APP_LOGGING_DRIVER}
         #options:
            #max-size: ${APP_LOGGING_SIZE}
            #max-file: ${APP_LOGGING_NUMBER}

   openresty:
      image: c6supper/galaxy-openresty:${OPENRESTY_TAG}
      container_name: galaxy-openresty
      restart: ${APP_RESTART_POLICY}
      environment:
         GALAXY_TUNNEL_HOST: ${TUNNEL_HOST}
         GALAXY_CLIENT_HOST: ${CLIENT_HOST}
         GALAXY_KEYCLOAK_HOST: ${KEYCLOAK_HOST}
         GALAXY_CLIENT_DB: ${CLIENT_DB}
         GALAXY_CLIENT_USER: ${CLIENT_USER}
         GALAXY_CLIENT_PASSWORD: ${CLIENT_PASSWORD}
      depends_on:
         - client
         - tunnel-1194
         - keycloak
         - postgres
      network_mode: service:tunnel-1194
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}


   client:
      image: c6supper/galaxy-client:${CLIENT_TAG}
      container_name: galaxy-client
      # network_mode: ${APP_NETWORK_MODE}
      restart: ${APP_RESTART_POLICY}
      depends_on:
         - postgres
      networks:
         - postgres
         - client
      volumes:
         - ${CLIENT_GALAXY_VOLUME}:${CLIENT_LOG_DIR}
      environment:
         GALAXY_GUACD_HOST: ${GUACD_HOST}
         GALAXY_POSTGRES_HOST: ${POSTGRES_HOST}
         GALAXY_POSTGRES_DB: ${APP_POSTGRES_DB}
         GALAXY_POSTGRES_USER: ${APP_POSTGRES_USER}
         GALAXY_POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
         GALAXY_CLIENT_DB: ${CLIENT_DB}
         GALAXY_CLIENT_USER: ${CLIENT_USER}
         GALAXY_CLIENT_PASSWORD: ${CLIENT_PASSWORD}
         GALAXY_CLIENT_LOG_DIR: ${CLIENT_LOG_DIR}
         GALAXY_AUTH_URL: ${GALAXY_AUTH_URL}
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}
      ports:
         - "8000:8000"

   guacd:
      image: c6supper/galaxy-guacd:${GUACD_TAG}
      container_name: galaxy-guacd
      # network_mode: ${APP_NETWORK_MODE}
      restart: ${APP_RESTART_POLICY}
      network_mode: service:tunnel-1194
      depends_on:
         - tunnel-1194
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}

   postgres:
      image: postgres:${POSTGRES_TAG}
      container_name: galaxy-postgres
      # network_mode: ${APP_NETWORK_MODE}
      restart: ${APP_RESTART_POLICY}
      environment:
         POSTGRES_USER: ${APP_POSTGRES_USER}
         POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
         POSTGRES_DB: ${APP_POSTGRES_DB}
      networks:
         - postgres
      volumes:
         - ${POSTGRES_DATA_VOLUME}:/var/lib/postgresql/data
      stop_grace_period: 2m
      stop_signal: SIGINT
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}
      ports:
         - ${POSTGRES_PORT}:${POSTGRES_PORT}

   adminer:
      image: adminer
      restart: always
      container_name: galaxy-postgres-adminer
      networks:
         - postgres
      ports:
         - 8081:8080

   keycloak-init:
      image: c6supper/galaxy-keycloak-init:${KEYCLOAK_INIT_TAG}
      container_name: galaxy-keycloak-init
      restart: always
      environment:
         KEYCLOAK_DB: ${KEYCLOAK_DB}
         KEYCLOAK_DB_USER: ${KEYCLOAK_DB_USER}
         KEYCLOAK_DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
         GALAXY_POSTGRES_HOST: ${POSTGRES_HOST}
         GALAXY_POSTGRES_USER: ${APP_POSTGRES_USER}
         GALAXY_POSTGRES_PASSWORD: ${APP_POSTGRES_PASSWORD}
         GALAXY_POSTGRES_PORT: ${POSTGRES_PORT}
      depends_on:
         - postgres
      networks:
         - keycloak
         - postgres
#      volumes:
#         - ${KEYCLOAK_INIT_LOG_VOLUME}:${KEYCLOAK_INIT_LOG_DIR}
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}

   keycloak:
      image: c6supper/galaxy-keycloak:${KEYCLOAK_TAG}
      container_name: galaxy-keycloak
      restart: always
      environment:
         PROXY_ADDRESS_FORWARDING: "true"
         DB_VENDOR: postgres
         DB_PORT: ${POSTGRES_PORT}
         KEYCLOAK_USER: ${KEYCLOAK_USER}
         KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
         DB_ADDR: galaxy-postgres
         DB_DATABASE: ${KEYCLOAK_DB}
         DB_USER: ${KEYCLOAK_DB_USER}
         DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
         KEYCLOAK_LOGLEVEL: DEBUG
         KEYCLOAK_IMPORT: ${KEYCLOAK_REALM_FILE}
      #         JGROUPS_DISCOVERY_PROTOCOL: JDBC_PING
#         JGROUPS_DISCOVERY_PROPERTIES: datasource_jndi_name=java:jboss/datasources/KeycloakDS,info_writer_sleep_time=500,initialize_sql="CREATE TABLE IF NOT EXISTS JGROUPSPING ( own_addr varchar(200) NOT NULL, cluster_name varchar(200) NOT NULL, created timestamp default current_timestamp, ping_data BYTEA, constraint PK_JGROUPSPING PRIMARY KEY (own_addr, cluster_name))"
      depends_on:
         - keycloak-init
#      network_mode: service:keycloak-init
      networks:
         - keycloak
         - postgres
#      volumes:
#         - ${KEYCLOAK_GALAXY_VOLUME}:/galaxy
      logging:
         driver: ${APP_LOGGING_DRIVER}
         options:
            max-size: ${APP_LOGGING_SIZE}
            max-file: ${APP_LOGGING_NUMBER}
      ports:
         - ${KEYCLOAK_HTTP_PORT}:${KEYCLOAK_HTTP_PORT}
